#!/usr/bin/env bash

# Fail-safe :: Return value of a pipeline is the value of the last (rightmost) 
# command to exit with a non-zero status, or zero if all commands in the 
# pipeline exit successfully
set -o pipefail

# Fail-safe :: Treat unset variables and parameters other than the special
# parameters ‘@’ or ‘*’ as an error when performing parameter expansion.
# An error message will be written to the standard error, and a 
# non-interactive shell will exit
set -u

#
# Install Neovim configuration

# Naming
readonly cr_script_sn='run_200_nvim_config_install'

# State file definition
readonly cr_state_success="$HOME/.config/chezmoi/state/$cr_script_sn"

# Initial install state file definition
readonly cr_initial_state="$HOME/.config/chezmoi/state/run_999_initial_install"

{{ if ne .chezmoi.os "darwin" -}}
readonly repo=git@github.com:rgruyters/nvim.git
{{ else - }}
readonly repo=https://github.com/rgruyters/nvim.git
{{ end -}}

#
## Preprocess :: Phase 0

# Validate existence of state file
if [ -e "$cr_state_success" ]; then
    # Graceful exit
    exit 0
fi

# Exit when this is a initial run, due to missing SSH key
if [ ! -e "$cr_initial_state" ]; then
  printf '%s\n' "WARN :: Initial run. Require SSH key"

  # Exit Gracefully
  exit 0
fi

if [ ! -d "$HOME/.config/nvim" ]; then
  git clone "$repo" "$HOME/.config/nvim" || {

    # Git clone failure
    printf '%s\n' "FAIL :: git :: clone :: git@github.com:rgruyters/nvim.git :: $HOME/.config/nvim :: $cr_script_sn/$LINENO"

    # Exit ungracefully
    exit 1
  }
fi

touch "$cr_state_success" || {
  # touch failure
  printf '%s\n' "FAIL :: touch :: $cr_state_success :: $cr_script_sn/$LINENO"

  # Exit ungracefully
  exit 1
}
