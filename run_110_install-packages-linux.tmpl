#!/usr/bin/env bash
## Package installer for Linux

# Validate if we are runinng on Linux system
{{ if ne .chezmoi.os "linux" -}}
exit 0
{{ end -}}

# Fail-safe :: Return value of a pipeline is the value of the last (rightmost) 
# command to exit with a non-zero status, or zero if all commands in the 
# pipeline exit successfully
set -o pipefail

# Fail-safe :: Treat unset variables and parameters other than the special 
# parameters ‘@’ or ‘*’ as an error when performing parameter expansion.
# An error message will be written to the standard error, and a
# non-interactive shell will exit
set -u

# Naming
readonly cr_script_sn='run_110_install-packages-linux'

# State file definition
readonly cr_state_success="$HOME/.config/chezmoi/state/$cr_script_sn"

# Validate existence of state file
if [ -e "$cr_state_success" ]; then
    # Action :: Graceful exit
    exit 0
fi

# Create paths
mkdir $HOME/Pictures/Backgrounds

# Install required packages for adding repo's
sudo apt update -qq
sudo apt install -y apt-transport-https gnupg2 rng-tools \
  powerline fonts-powerline python3-powerline \
  make build-essential libssl-dev zlib1g-dev \
  libbz2-dev libreadline-dev libsqlite3-dev wget curl llvm \
  libncursesw5-dev xz-utils tk-dev libxml2-dev libxmlsec1-dev libffi-dev liblzma-dev \
  jq software-properties-common policykit-desktop-privileges policykit-1-gnome

# Install Gopass
GOPASS_LATEST_DL=$(curl -sL https://api.github.com/repos/gopasspw/gopass/releases | jq -r '.[].assets[] | select(.name | test("linux_amd64")) | .browser_download_url'|head -1)
curl -sLo /tmp/gopass_linux_amd64.deb $GOPASS_LATEST_DL
sudo dpkg -i /tmp/gopass_linux_amd64.deb

# Install Nodejs (LTS)
curl -sL https://deb.nodesource.com/setup_lts.x | sudo -E bash -

# Python related stuff
sudo apt install -y python3-dev python3-pip

# Install other packages
sudo apt install -y tmux fzf zsh ripgrep python3-neovim

# Install fonts
sudo apt install -y fonts-jetbrains-mono fonts-awesome-font

# Install i3wm and related stuff
sudo apt install -y i3 i3status polybar kitty feh rofi

# Install Kitty terminal - https://sw.kovidgoyal.net/kitty
curl -L https://sw.kovidgoyal.net/kitty/installer.sh | sh /dev/stdin
mkdir $HOME/bin && ln -nfs $HOME/.local/kitty.app/bin/kitty $HOME/bin/kitty

# Install miniconda - https://docs.conda.io/en/latest/miniconda.html
bash -c $(curl -sLO https://repo.anaconda.com/miniconda/Miniconda3-py310_23.5.2-0-Linux-x86_64.sh)

# Installing Nerd Fonts - https://www.nerdfonts.com
curl -sL -o /tmp/JetBrainsMono.zip https://github.com/ryanoasis/nerd-fonts/releases/download/v2.2.2/JetBrainsMono.zip
mkdir -p $HOME/.local/share/fonts
(cd $HOME/.local/share/fonts && unzip /tmp/JetBrainsMono.zip -x '*Windows*' '* NL*' 'readme.md')

curl -sLO -o /tmp/NerdFontsSymbolsOnly.zip https://github.com/ryanoasis/nerd-fonts/releases/download/v3.0.2/NerdFontsSymbolsOnly.zip
(cd $HOME/.local/share/fonts && unzip /tmp/NerdFontsSymbolsOnly.zip -x '*Windows*' '* NL*' 'readme.md')

# Update font cache
fc-cache -f

# refresh
hash -r

# Success
touch "$cr_state_success" || {
    # touch failure
    printf '%s\n' "FAIL :: touch :: $cr_state_success :: $cr_script_sn/$LINENO"

    # Exit ungracefully
    exit 1
}

# vim: ft=bash
