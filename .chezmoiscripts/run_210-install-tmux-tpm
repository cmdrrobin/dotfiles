#!/usr/bin/env bash

# Fail-safe :: Return value of a pipeline is the value of the last (rightmost) 
# command to exit with a non-zero status, or zero if all commands in the 
# pipeline exit successfully
set -o pipefail

# Fail-safe :: Treat unset variables and parameters other than the special
# parameters ‘@’ or ‘*’ as an error when performing parameter expansion.
# An error message will be written to the standard error, and a 
# non-interactive shell will exit
set -u

#
# tmux TPM plugin manager

# Naming
readonly cr_script_sn='run_280_tmux_tpm_installation'

# State file definition
readonly cr_state_success="$HOME/.config/chezmoi/state/$cr_script_sn"

#
## Preprocess :: Phase 0

# Validate existence of state file
if [ -e "$cr_state_success" ]; then
    # Graceful exit
    exit 0
fi

if [ ! -d "$HOME/.tmux/plugins/tpm" ]; then
  git clone https://github.com/tmux-plugins/tpm $HOME/.tmux/plugins/tpm || {
    # Git clone failure
    printf '%s\n' "FAIL :: git :: clone :: https://github.com/tmux-plugins/tpm :: $HOME/.tmux/plugins/tpm :: $cr_script_sn/$LINENO"

    # Exit ungracefully
    exit 1
  }

  tmux source ~/.tmux.conf
  $HOME/.tmux/plugins/tpm/bin/install_plugins all || {
    # Install failure
    printf '%s\n' "FAIL :: install_plugins :: $cr_script_sn/$LINENO"

    # Exit ungracefully
    exit 1
  }
fi

touch "$cr_state_success" || {
    # touch failure
    printf '%s\n' "FAIL :: touch :: $cr_state_success :: $cr_script_sn/$LINENO"

    # Exit ungracefully
    exit 1
}
